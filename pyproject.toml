[tool.poetry]
name = "cent"
version = "5.0.0"
description = "Python library to communicate with Centrifugo v3 HTTP API"
authors = ["Alexandr Emelin", "Katant Savelev"]
license = "MIT"
readme = 'README.md'
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development",
    "Topic :: System :: Networking",
    "Topic :: Terminals",
    "Topic :: Text Processing",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3"
pydantic = "^2"
requests = "^2"
types-requests = "^2"
betterproto = { version = "^2.0.0b6", allow-prereleases = true }

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"
ruff = "^0.1.15"
mypy = "^1.8.0"
uvloop = "^0.19.0"
pytest = "^8"
anyio = "^4.2.0"
pytest-benchmark = "^4.0.0"
betterproto = { extras = ["compiler"], version = "^2.0.0b6", allow-prereleases = true }
grpcio-tools = "^1.60.0"

[tool.ruff]
line-length = 99
select = [
    "PL", # pylint
    "F", # pyflakes
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "C90", # mccabe
    "N", # pep8-naming
    "YTT", # flake8-2020
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C40", # flake8-comprehensions
    "T10", # flake8-debugger
    "EXE", # flake8-executable
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PT", # flake8-pytest-style
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PGH", # pygrep-hooks
    "RSE", # flake8-raise
    "RUF", # ruff
]
ignore = [
    "PLR0913", # too-many-arguments
    "PGH003", # use specific rule code when ignore
    "T201"
]

[tool.ruff.per-file-ignores]
"cent/types/*" = ["E501"]
"cent/methods/*" = ["E501"]
"tests/*" = ["S101", "PT012"]
"cent/protos/centrifugal/*" = ["RUF009", "ARG002", "E501"]

[tool.mypy]
strict = true
python_version = "3.9"
show_error_codes = true
show_error_context = true
pretty = true
ignore_missing_imports = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
follow_imports_for_stubs = true
namespace_packages = true
show_absolute_path = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
warn_required_dynamic_aliases = true


[[tool.mypy.overrides]]
module = [
    "pytest_benchmark.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["cent.protos.centrifugal.*"]
ignore_errors = true


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
